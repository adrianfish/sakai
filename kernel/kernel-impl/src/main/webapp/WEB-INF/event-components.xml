<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- database beans -->
    <bean id="org.sakaiproject.event.impl.UsageSessionServiceSqlDefault"           class="org.sakaiproject.event.impl.UsageSessionServiceSqlDefault"/>
    <bean id="org.sakaiproject.event.impl.UsageSessionServiceSqlHSql"              class="org.sakaiproject.event.impl.UsageSessionServiceSqlHSql"/>
    <bean id="org.sakaiproject.event.impl.UsageSessionServiceSqlMySql"             class="org.sakaiproject.event.impl.UsageSessionServiceSqlMySql"/>
    <bean id="org.sakaiproject.event.impl.UsageSessionServiceSqlOracle"            class="org.sakaiproject.event.impl.UsageSessionServiceSqlOracle"/>

	<bean id="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappings.tincanapiEvent"
       class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">
       <property name="annotatedClasses">
          <list>
             <value>org.sakaiproject.event.api.TincanapiEvent</value>
          </list>
         </property>
	</bean>

	<bean id="org.sakaiproject.event.api.EventTrackingService"
			class="org.sakaiproject.event.impl.BaseEventTrackingService"
            init-method="init" destroy-method="destroy">
        <property name="ignite" ref="org.sakaiproject.ignite.SakaiIgnite"/>
	</bean>

	<bean id="org.sakaiproject.event.api.NotificationService"
			class="org.sakaiproject.event.impl.DbNotificationService"
            init-method="init" destroy-method="destroy">

        <lookup-method name="eventTrackingService"       bean="org.sakaiproject.event.api.EventTrackingService"/>
        <lookup-method name="serverConfigurationService" bean="org.sakaiproject.component.api.ServerConfigurationService"/>
        <lookup-method name="idManager"                  bean="org.sakaiproject.id.api.IdManager"/>
        <lookup-method name="sqlService"                 bean="org.sakaiproject.db.api.SqlService"/>
        <lookup-method name="memoryService"              bean="org.sakaiproject.memory.api.MemoryService"/>

        <property name="tableName">          <value>SAKAI_NOTIFICATION</value>  </property>
        <property name="locksInDb">          <value>false</value>               </property>
        <property name="autoDdl">            <value>${auto.ddl}</value>         </property>
	</bean>

	<bean id="org.sakaiproject.event.api.UsageSessionService"
			class="org.sakaiproject.event.impl.UsageSessionServiceAdaptor"
            init-method="init" destroy-method="destroy">

        <lookup-method name="timeService"                bean="org.sakaiproject.time.api.TimeService"/>
        <lookup-method name="sqlService"                 bean="org.sakaiproject.db.api.SqlService"/>
        <lookup-method name="serverConfigurationService" bean="org.sakaiproject.component.api.ServerConfigurationService"/>
        <lookup-method name="threadLocalManager"         bean="org.sakaiproject.thread_local.api.ThreadLocalManager"/>
        <lookup-method name="sessionManager"             bean="org.sakaiproject.tool.api.SessionManager"/>
        <lookup-method name="eventTrackingService"       bean="org.sakaiproject.event.api.EventTrackingService"/>
        <lookup-method name="authzGroupService"          bean="org.sakaiproject.authz.api.AuthzGroupService"/>
        <lookup-method name="idManager"                  bean="org.sakaiproject.id.api.IdManager"/>
        <lookup-method name="userDirectoryService"       bean="org.sakaiproject.user.api.UserDirectoryService"/>
        <lookup-method name="memoryService"              bean="org.sakaiproject.memory.api.MemoryService"/>
		<property name="securityService" ref="org.sakaiproject.authz.api.SecurityService"/>
		<property name="autoDdl"><value>${auto.ddl}</value></property>
        <property name="databaseBeans">
           <map>
              <entry key="default"><ref bean="org.sakaiproject.event.impl.UsageSessionServiceSqlDefault"/></entry>
              <entry key="hsqldb" ><ref bean="org.sakaiproject.event.impl.UsageSessionServiceSqlHSql"   /></entry>
              <entry key="mysql"  ><ref bean="org.sakaiproject.event.impl.UsageSessionServiceSqlMySql"  /></entry>
              <entry key="oracle" ><ref bean="org.sakaiproject.event.impl.UsageSessionServiceSqlOracle" /></entry>
           </map>
        </property>
	</bean>

    <!-- ActivityService -->
    <bean id="org.sakaiproject.event.api.ActivityService"
			class="org.sakaiproject.event.impl.ActivityServiceImpl"
            init-method="init" destroy-method="destroy">
	 	<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService"/>
	 	<property name="memoryService" ref="org.sakaiproject.memory.api.MemoryService" />
	 	<property name="usageSessionService" ref="org.sakaiproject.event.api.UsageSessionService"/>
	 	
	 </bean>

    <bean id="org.sakaiproject.event.api.EventQueryService"
          class="org.sakaiproject.event.impl.EventQueryServiceImpl"
          init-method="init"  destroy-method="destroy">

        <property name="sqlService" ref="org.sakaiproject.db.api.SqlService"/>

    </bean>

    <bean id="org.sakaiproject.event.api.LearningResourceStoreService"
            class="org.sakaiproject.event.impl.BaseLearningResourceStoreService"
            init-method="init" destroy-method="destroy">
        <property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService"/>
        <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
        <property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService"/>
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager"/>
        <!-- property name="siteService" ref="org.sakaiproject.site.api.SiteService"/ -->
        <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService"/>
    </bean>

</beans>
